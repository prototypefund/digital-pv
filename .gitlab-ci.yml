default:
  tags: ["docker"]

image: cirrusci/flutter:3.0.1

stages:
  - analyze
  - test
  - deploy

#analyse:
#  stage: analyze
#  rules:
#    - if: '$CI_PIPELINE_SOURCE == "push"'
#    - if: '$CI_PIPELINE_SOURCE == "web"'
#  needs: []
#  before_script:
#    - flutter clean
#    - flutter pub get
#  script:
#    - flutter analyze
#
#all_unit_tests:
#  stage: test
#  rules:
#    - if: '$CI_PIPELINE_SOURCE == "push"'
#    - if: '$CI_PIPELINE_SOURCE == "web"'
#  needs: []
#  before_script:
#    - flutter clean
#    - flutter pub get
#  script:
#    - flutter test --coverage test/**/*test.dart
#  artifacts:
#    paths:
#      - coverage/
#
#coverage:
#  stage: test
#  rules:
#    - if: '$CI_PIPELINE_SOURCE == "push"'
#    - if: '$CI_PIPELINE_SOURCE == "web"'
#  needs: [all_unit_tests]
#  dependencies: [all_unit_tests]
#
#  script:
#    - lcov --summary coverage/lcov.info
#    - lcov --remove coverage/lcov.info -o coverage/lcov.info
#    - genhtml coverage/lcov.info -o coverage/html
#    - sudo apt-get update && sudo apt-get install python3-distutils -y
#    - curl -O https://raw.githubusercontent.com/eriwen/lcov-to-cobertura-xml/master/lcov_cobertura/lcov_cobertura.py
#    - python3 lcov_cobertura.py coverage/lcov.info --output coverage/coverage.xml
#  coverage: /^\s*lines\.*:\s(\d+.\d+)\%/
#  artifacts:
#    reports:
#      coverage_report:
#        coverage_format: cobertura
#        path: coverage/coverage.xml
#    paths:
#      - coverage/html/


#build-web-package:
#  stage: deploy
#  script:
#    - flutter build web --base-href "/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/web/"
##    - mkdir -p public/$CI_COMMIT_REF_NAME # create directory first
#  #    - cp -r build/web public/$CI_COMMIT_REF_NAME
#  artifacts:
#    paths:
#      - build/web
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#      when: never
#    - if: $CI_COMMIT_BRANCH

push-pages-content-to-s3: # pushes the built web package to the s3 bucket containing all pages files
  stage: deploy
#  dependencies:
#    - build-web-package
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - aws --version
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH


push-pages-content:
  dependencies:
    - push-pages-content-to-s3 # this job will download the complete pages content from s3 and push it to gitlab pages
  stage: deploy
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - aws --version
  artifacts:
    paths:
      - public
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://$CI_PROJECT_NAMESPACE.gitlab.io/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/web/
    on_stop: stop_review_environment
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH

stop_review_environment:
  stage: deploy
  script:
    - echo "Remove review app"
    - echo "Not implemented yet"
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH
      when: manual