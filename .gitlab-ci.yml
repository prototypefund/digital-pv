default:
  tags: [ "docker" ]

image: ghcr.io/cirruslabs/flutter:3.13.0

stages:
  - analyze
  - test
  - build
  - deploy

analyse:
  stage: analyze
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
  needs: [ ]
  before_script:
    - flutter clean
  script:
    - flutter analyze

all_unit_tests:
  variables:
    KUBERNETES_CPU_REQUEST: 1
    KUBERNETES_CPU_LIMIT: 2
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
  needs: [ ]
  before_script:
    - flutter clean
  script:
    - flutter test --coverage test/**/*test.dart
  artifacts:
    paths:
      - coverage/

coverage:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
  needs: [ all_unit_tests ]
  dependencies: [ all_unit_tests ]

  script:
    - lcov --summary coverage/lcov.info
    - lcov --remove coverage/lcov.info -o coverage/lcov.info
    - genhtml coverage/lcov.info -o coverage/html
    - sudo apt-get update && sudo apt-get install python3-distutils -y
    - curl -O https://raw.githubusercontent.com/eriwen/lcov-to-cobertura-xml/master/lcov_cobertura/lcov_cobertura.py
    - python3 lcov_cobertura.py coverage/lcov.info --output coverage/coverage.xml
  coverage: /^\s*lines\.*:\s(\d+.\d+)\%/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/coverage.xml
    paths:
      - coverage/html/


build-web-package:
  variables:
    KUBERNETES_CPU_REQUEST: 750m
    KUBERNETES_CPU_LIMIT: 2500m
    KUBERNETES_MEMORY_REQUEST: 2000Mi
    KUBERNETES_MEMORY_LIMIT: 3500Mi
  stage: build
  script:
    - flutter build web --base-href "/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/web/"
  artifacts:
    paths:
      - build/web
  rules:
    - if: $CI_COMMIT_BRANCH
  needs: [ analyse, all_unit_tests ]
  dependencies: [ analyse, all_unit_tests ]

store-web-package-and-create-pages-content: # puts the built web package to the s3 bucket containing all pages files
  stage: deploy
  variables:
    AWS_S3_BUCKET: $GITLAB_PAGES_DEV_BUCKET_NAME
    AWS_ACCESS_KEY_ID: $GITLAB_PAGES_DEV_BUCKET_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $GITLAB_PAGES_DEV_BUCKET_ACCESS_SECRET_KEY
    AWS_DEFAULT_REGION: $GITLAB_PAGES_DEV_BUCKET_REGION
  image:
    name: amazon/aws-cli
    entrypoint: [ "" ]
  script:
    - aws s3 rm s3://$AWS_S3_BUCKET/$CI_COMMIT_REF_NAME/ --recursive
    - aws s3 cp build/ s3://$AWS_S3_BUCKET/$CI_COMMIT_REF_NAME/ --recursive
    - aws s3 sync --quiet s3://$AWS_S3_BUCKET/ pages-content # now we download everything
  artifacts:
    paths:
      - pages-content
  rules:
    - if: $CI_COMMIT_BRANCH
  needs: [ build-web-package ]
  dependencies: [ build-web-package ]


pages: # this job take the downloaded s3 content from store-web-package-and-create-pages-content and push it to pages gitlab pages. The job needs to be name likes this for the deployment to pages to work (source: https://docs.gitlab.com/ee/user/project/pages/getting_started/pages_from_scratch.html)
  stage: deploy
  image: ruby:2.7 # for faster execution
  script:
    - mv pages-content/* public/
  artifacts:
    paths:
      - public
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: https://$CI_PROJECT_NAMESPACE.gitlab.io/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME/web/
    on_stop: remove-review-app-from-s3
  rules:
    - if: $CI_COMMIT_BRANCH
  needs: [ store-web-package-and-create-pages-content ]
  dependencies: [ store-web-package-and-create-pages-content ]

remove-review-app-from-s3:
  stage: deploy
  variables:
    AWS_S3_BUCKET: $GITLAB_PAGES_DEV_BUCKET_NAME
    AWS_ACCESS_KEY_ID: $GITLAB_PAGES_DEV_BUCKET_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $GITLAB_PAGES_DEV_BUCKET_ACCESS_SECRET_KEY
    AWS_DEFAULT_REGION: $GITLAB_PAGES_DEV_BUCKET_REGION
    GIT_STRATEGY: none # prevents failing to check out repo, when branch was deleted and this job is executed
  image:
    name: amazon/aws-cli
    entrypoint: [ "" ]
  script:
    - echo "Remove review app"
    - aws s3 rm s3://$AWS_S3_BUCKET/$CI_COMMIT_REF_NAME/ --recursive
    - echo "next deployment to dev will no longer include this environment"
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_COMMIT_BRANCH
      when: manual